%% Helper function : HelperCreateStraightRoadScenario
% This helper function is to create straight road scenario with 
% 1. Four lanes road constructed with given road center points
% 2. Creation of ego vehicle
% 3. Specify the trajectory of each vehicle through 
%    given N waypoints and speed at each waypoint

% This function takes nothing and ouputs scenario handle and ego vehicle
% handle

% Copyright 2019 The MathWorks, Inc.

function [scenario, egoVehicle] = HelperCreateStraightRoadScenario()
% Generated by MATLAB(R) 9.7 (R2019b) and Automated Driving Toolbox 3.0
% (R2019b). Generated on: 09-Jul-2019 19:15:14

% Construct a drivingScenario object.
scenario = drivingScenario;

% Setting up sample time to match with sensor update rate
scenario.SampleTime = 0.1;

% Setting up simulation stop time
scenario.StopTime   = Inf;

% Add all road segments
% roadCenters = [-200 400 0; 50 400 0];
roadCenters = [150 24.2 0;
    54 24.2 0];
laneSpecification = lanespec([2 2]);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road');

roadCenters = [105 75 0;
    105 -20 0];
laneSpecification = lanespec([2 2]);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road1');

% Create a lane specification
% Here 2 represents number of lanes to create
laneSpecification = lanespec(2);

% Create a road segment with given road centers and lane spec information
road(scenario, roadCenters, 'Lanes', laneSpecification);

% Add the ego vehicle
egoVehicle = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [56 19 0], ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'egoVehicle');
waypoints = [56 19 0;
    135 19 0];
speed = 10;
trajectory(egoVehicle, waypoints, speed);

% Add the non-ego actors
otherVehicle = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [103 73 0], ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'otherVehicle');
waypoints = [103 73 0;
    103 52.1 0;
    103 42.5 0;
    103 34 0;
    105 26.9 0;
    109.1 22.9 0;
    114.9 22 0;
    119.7 22 0;
    129.2 22 0;
    135.3 22 0;
    144.5 22 0];
speed = [20;20;20;8;5;8;20;20;20;20;20];
trajectory(otherVehicle, waypoints, speed);

actor(scenario, ...
    'ClassID', 5, ...
    'Length', 2.4, ...
    'Width', 0.76, ...
    'Height', 0.8, ...
    'Position', [85.2 23.2 0], ...
    'PlotColor', [166 166 166] / 255, ...
    'Name', 'Barrier');

actor(scenario, ...
    'ClassID', 5, ...
    'Length', 2.4, ...
    'Width', 0.76, ...
    'Height', 0.8, ...
    'Position', [75.3 23.6 0], ...
    'PlotColor', [166 166 166] / 255, ...
    'Name', 'Barrier1');

actor(scenario, ...
    'ClassID', 3, ...
    'Length', 1.7, ...
    'Width', 0.45, ...
    'Height', 1.7, ...
    'Position', [91.7 23.6 0], ...
    'Mesh', driving.scenario.bicycleMesh, ...
    'PlotColor', [0.929 0.694 0.125], ...
    'Name', 'Bicycle');

actor(scenario, ...
    'ClassID', 4, ...
    'Length', 0.24, ...
    'Width', 0.45, ...
    'Height', 1.7, ...
    'Position', [108.4 16.3 0], ...
    'RCSPattern', [-8 -8;-8 -8], ...
    'Mesh', driving.scenario.pedestrianMesh, ...
    'PlotColor', [0.494 0.184 0.556], ...
    'Name', 'Pedestrian');
trajectory(otherVehicle, waypoints, speed);

